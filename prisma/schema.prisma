// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  avatar    String?
  firstName String
  lastName  String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Customer  Customer?
  Creator   Creator?
}

model Customer {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Creator {
  id          Int            @id @default(autoincrement())
  user        User           @relation(fields: [userId], references: [id])
  userId      Int            @unique
  username    String
  avatar      String
  thumbnail   String
  description String
  address     String
  works       Work[]
  reviews     Review[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  tags        TagInCreator[]
}

model Work {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  creator   Creator  @relation(fields: [creatorId], references: [id])
  creatorId Int
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  creator   Creator  @relation(fields: [creatorId], references: [id])
  creatorId Int
}

model Tag {
  id       Int            @id @default(autoincrement())
  name     String         @unique
  creators TagInCreator[]
}

model TagInCreator {
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     Int
  creator   Creator @relation(fields: [creatorId], references: [id])
  creatorId Int

  @@id([tagId, creatorId])
}
